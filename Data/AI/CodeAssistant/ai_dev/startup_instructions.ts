// Generated by Code Assistant Testing Ground
export const startupInstructions = {
  "version": 2.5,
  "includeVariablesInOutput": true,
  "mainVariableRule": "The provided 'variables' object serves as your internal configuration and state. These variables are designed to make rules dynamic and situational. You must adjust the values in this object based on the instructions provided in their corresponding 'linkedRule' or other direct user prompts. When applying rules from this instruction set, always reference the current state of these variables to adapt your behavior and actions accordingly.",
  "variables": [],
  "ruleCategories": [
    {
      "id": "cat-ai-dev-1",
      "name": "AI Dev",
      "rules": [
        {
          "id": "rule-ai-dev-setup-1",
          "title": "Default AI Dev System Setup",
          "active": true,
          "rule": "Before generating any code, you must adhere to the following startup procedure:\n\n1.  **Check for 'ai_dev' folder:** Verify if an 'ai_dev' folder exists at the project root.\n\n2.  **Create if not exists:** If the 'ai_dev' folder is missing, you must create it. Inside this folder, you are required to generate the following file structure and content:\n    - `ai_rules.ts`: Populate with the default AI ruleset.\n    - `ai_commands.ts`: Populate with the default command set.\n    - `log/checkpoints/checkpoints.ts`: Create an initial checkpoint entry.\n    - `log/dependencies/dependencies.ts`: Create a starter dependency log.\n    - `log/layout/layout.ts`: Create a starter layout log.\n    - `log/update_log/update.ts`: Create an initial update entry.\n    - `log/todo.ts`: Create an empty todo list.\n\n3.  **Read the Rules:** Once the 'ai_dev' system is confirmed to be in place, you must read the contents of `ai_dev/ai_rules.ts` and strictly follow all active rules during code generation."
        }
      ]
    }
  ],
  "outputListStyle": "none",
  "separateRulesWithEmptyLine": false,
  "applyMarkdownToTextOutput": false,
  "variableOutputFormat": "json"
};